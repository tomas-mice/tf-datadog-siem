name: 'Get Removed Rules'
on:
  push:
    branches:
    - main
#   schedule:
#     - cron: '22 14 * * *' #runs at 00:00 UTC everyday

permissions: write-all

jobs:
  build:
    name: "Python"
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9.15 #install the python needed
    - name: Set ENV vars
      run: |
        echo "REPO_DIR=$(pwd)" >> $GITHUB_ENV
        echo "DATE_TODAY=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
    - name: Install requirements
      run: |
        cd original-rule-cloner/
        python3 -m venv .venv
        source .venv/bin/activate
        pip3 install --upgrade pip
        pip3 install -r requirements.txt

    - uses: jannekem/run-python-script-action@v1
      id: py-script
      with:
        script: |
          import subprocess
          import os
          os.chdir('${{ env.REPO_DIR }}')
          process = subprocess.run("original-rule-cloner/.venv/bin/python3 ./original-rule-cloner/default-rules-diff.py", shell=True, capture_output=False, stdout=subprocess.PIPE)

          for line in process.stdout.splitlines():
              print(line.decode("utf-8"))

          output = process.stdout.splitlines()[-1].decode("utf-8")
          if output.__ne__("NOT_FOUND"):
            set_env("REMOVED_RULES_IDS", output)
            set_env("RULES_FOUND", "True")
      env:
        DD_API_KEY: ${{ secrets.DATADOG_API_KEY }} # if run.py requires passwords..etc, set it as secrets
        DD_APP_KEY: ${{ secrets.DATADOG_APP_KEY }}

    - name: Setup Terraform
      if: ${{ env.RULES_FOUND }} == 'True'
      uses: hashicorp/setup-terraform@v1

    # - name: Configure AWS Credentials
    #   if: ${{ env.RULES_FOUND }} == 'True'
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-region: eu-west-2
    #     role-to-assume: arn:aws:iam::717871035839:role/tbol-gh-action-role-tf-datadog-siem
    #     role-duration-seconds: 3500
    #     role-skip-session-tagging: true
    #     role-session-name: githubDataDogPipeline

    - uses: jannekem/run-python-script-action@v1
      name: Terraform State RM
      if: ${{ env.RULES_FOUND }} == 'True'
      with:
        script: |
          import subprocess
          for rule_id in "${{ env.REMOVED_RULES_IDS }}".split(","):
            print(f"Removing rule '{rule_id}' from TF state")
            # supbrocess.run("terraform state rm module.default-detection-rules.datadog_security_monitoring_default_rule.tfer--security_monitoring_default_rule_{rule_id}", capture_output=False, shell=True)

    - name: Create Pull Request
      if: ${{ env.RULES_FOUND }} == 'True'
      uses: peter-evans/create-pull-request@v4
      with:
        commit-message: "Removed rules from TF files that are no longer present in Datadog"
        branch: changes-${{ env.DATE_TODAY }}
        delete-branch: true
        title: 'Rules removed [${{ env.REMOVED_RULES_IDS }}]'
        assignees: ""
        reviewers: ""
        base: main
        body: |
          Some rules got removed from Datadog hence removing them from TF configuration.
          They were already removed from Terraform state (terraform state rm)
          Rules: [${{ env.REMOVED_RULES_IDS }}]
          Please, make sure that cloned rules are still relevant and if not, remove them.
